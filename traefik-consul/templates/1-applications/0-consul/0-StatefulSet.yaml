apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "name" . }}"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "name" . }}
spec:
  serviceName: "{{ template "name" . }}"
  replicas: 3
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
      - name: "{{ template "name" . }}"
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        args:
        - "agent"
        - "-server"
        - "-client"
        - "0.0.0.0"
        - "-recursor"
        - "8.8.8.8"
        - "-bootstrap-expect"
        - "3"
        - "-retry-join"
        - "traefik-consul"
        - "-ui"
        ports:
        - name: http
          containerPort: {{.Values.HttpPort}}
        - name: rpc
          containerPort: {{.Values.RpcPort}}
        - name: serflan-tcp
          protocol: "TCP"
          containerPort: {{.Values.SerflanPort}}
        - name: serfwan-tcp
          protocol: "TCP"
          containerPort: {{.Values.SerfwanPort}}
        - name: server
          containerPort: {{.Values.ServerPort}}
        - name: consuldns
          containerPort: {{.Values.ConsulDnsPort}}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: ca-certificates
          mountPath: /etc/ssl/certs
        - name: traefik-consul-data-chart-rev{{ .Release.Time.Seconds }}
          mountPath: /consul/data
        livenessProbe:
          exec:
            command:
            - consul
            - members
          initialDelaySeconds: 300
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - consul leave
      volumes:
      - name: ca-certificates
        hostPath:
          path: /usr/share/ca-certificates/
  volumeClaimTemplates:
  - metadata:
      name: traefik-consul-data-chart-rev{{ .Release.Time.Seconds }}
      annotations:
      {{- if .Values.StorageClass }}
        volume.beta.kubernetes.io/storage-class: {{.Values.StorageClass}}
      {{- else }}
        volume.alpha.kubernetes.io/storage-class: default
      {{- end }}
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          # upstream recommended max is 700M
          storage: "{{.Values.Storage}}"
